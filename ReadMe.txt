＊必要環境
	・python3, numpy

時系列連続値連想メモリの特性調査に関するプログラム
BP型3層NNによる相互想起を扱うネットワーク

＊ファイルとディレクトリの構成
＜ディレクトリ＞
	・common
		NNの学習やモデルに必要なファイルをまとめたディレクトリ。
		"ゼロから作るDeep Learning"を参考。
	
	・corrvec
		作成した乱数ベクトルデータセットを保存したディレクトリ。
		
	・MODEL
		学習したモデルを保存するためのディレクトリ。
		条件に合わせてさらにディレクトリを分類してあります。
		
	・TEST_RESULT
		実験結果を保存するためのディレクトリ。
		条件に合わせてさらにディレクトリを分類してあります。
		
	・TRAIN_RESULT
		訓練詳細を保存するためのディレクトリ。
		条件に合わせてさらにディレクトリを分類してあります。
		
＜ファイル＞
	・model.py
		BP型3層NNのんモデルを記述したファイル。
		"ゼロから作るDeep Learning"のch05, ch06あたりを参考にしています。
		
	・MySaveloadFunc.py
		便利な関数の寄せ集めプログラム。
		importして使用。
		
	・corrdata_generator.py
		各ベクトル間に相関のある任意の数のベクトルデータを作成するプログラム
		参考(https://qiita.com/horiem/items/e3dfe0a0f0ac3a66f509)
		作成したベクトルのデータはcorrvecに保存されています。
	
	・~_train.py
		学習用プログラム。
		引数指定
			-hd : 隠れ層ニューロン数
			-p : 学習パターン数
			-c : データ間の相関係数
		
	・~_test.py
		推論用プログラム。
		引数指定は~_test.pyと同様。
		
	・~_all_train.py / ~_all_test.py
		学習・推論をまとめて走らせるためのプログラム。
		
	・noise_test.py
		ノイズ耐性を計測するためのプログラム。
		引数指定
			-hd : 隠れ層ニューロン数
			-p : 学習パターン数
			-c : データ間の相関係数
			-nr : 雑音率
	
	・thread_~.py
		複数系列の想起に対する性質を観察するためのプログラム。
		引数指定
			-hd : 隠れ層ニューロン数
			-p : 学習パターン数
			-c : データ間の相関係数
			-tn : 記憶させる系列数
			（※学習パターン数が系列数で割り切れないとエラーが出ます。）
			
			